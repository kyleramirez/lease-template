//
// Skeleton V1.2
// 6/20/2012 << That date is only there to frighten you.
// Made fluid and mobile-first by Kyle on 11/23/15
//
%skeleton-clearfix {
  &:after {
    content:'';
    display:table;
    clear:both;
  }
}

$gutter: map-get($skeleton-config,gutter);
.container--compliant {
  position:relative;
  margin: 0 auto;
  padding:0 $gutter;
  box-sizing:border-box;
  @extend %skeleton-clearfix;
  @each $breakpoint in map-get($skeleton-config,breakpoints) {
    @media screen and (min-width:$breakpoint) {
      @if ($breakpoint >= map-get($skeleton-config,fluidAt)) {
        width: $breakpoint;
      }
    }
  }

  .row,.grid-row {
    position:relative;
    margin-right:-$gutter;
    @extend %skeleton-clearfix;
  }

  .column {
    position:relative;
    float: left;
    display: inline-block;
    box-sizing:border-box;
    margin-right: $gutter;
    width:calc(100% - #{$gutter});
    &s { @extend .column; }
    @extend %skeleton-clearfix;
  }

  @media all and (min-width:map-get($skeleton-config,fluidAt)) {
    @for $i from 1 through length(map-get($skeleton-config,columns)) {
      $percentage:((1 / length(map-get($skeleton-config,columns))) * $i) * 100%;
      .#{nth(map-get($skeleton-config,columns), $i)} { width:calc(#{$percentage} - #{$gutter}) }
      .offset-by-#{nth(map-get($skeleton-config,columns), $i)} { margin-left:#{$percentage}; }
    }
  }
}
//
// Skeleton V1.2
// 6/20/2012 << That date is only there to frighten you.
// SCSS'd by Kyle
//
.container {
  position: relative;
  width: 960px;
  margin: 0 auto;
  padding: 0;

  .column {
    float: left;
    display: inline;
    margin-left: 10px; //Previously commented out
    margin-right: 10px; //Previously commented out
    &s { @extend .column; }

    // Nested Column Classes
    &.alpha {
      margin-left: 0;
      float: left;
    }
    &.omega {
      margin-right: 0;
      float: right;
    }

    // Base grid
    @for $i from 0 through (length($skeletonColumns)-1) {
      &.#{nth($skeletonColumns, $i+1)} { width: (($i+1)*40px)+($i*20px); }
    }
  }

  //Offsets
  @for $i from 1 through (length($skeletonColumns)-1) {
    .offset-by-#{nth($skeletonColumns, $i)} { padding-left:$i*60px; }
  }
  //################# Medium Breakpoint ############################
  @media only screen and (min-width: 768px) and (max-width: 959px) {
    width:768px;

    .column {

      &.alpha {
        margin-left: 0;
        margin-right: 10px;
      }

      &.omega {
        margin-right: 0;
        margin-left: 10px;
      }

      // Base grid
      @for $i from 0 through (length($skeletonColumns)-1) {
        &.#{nth($skeletonColumns, $i+1)} { width: (($i+1)*28px)+($i*20px); }
      }
    }
    .alpha.omega {
      margin-left: 0;
      margin-right: 0;
    }

    //Offsets
    @for $i from 1 through (length($skeletonColumns)-1) {
      .offset-by-#{nth($skeletonColumns, $i)} { padding-left:$i*48px; }
    }
  }
  //###### Small Landscape Breakpoint ########
  @media only screen and (max-width: 767px) {
    width:480px;

    .column {
      margin: 0;

      // Base grid
      &%small-landscape-columns {
        width: 480px;
      }
      @for $i from 0 through (length($skeletonColumns)-1) {
        &.#{nth($skeletonColumns, $i+1)} { @extend %small-landscape-columns; }
      }
    }

    //Offsets
    %small-portrait-offsets {
        padding-left:0;
    }
    @for $i from 1 through (length($skeletonColumns)-1) {
      .offset-by-#{nth($skeletonColumns, $i)} { @extend %small-portrait-offsets; }
    }
  }
  //###### Small Portrait Breakpoint ########
  @media only screen and (max-width: 479px) {
    width:320px;

    .column {

      // Base grid
      &%small-portrait-columns {
        width: 320px;
      }
      @for $i from 0 through (length($skeletonColumns)-1) {
        &.#{nth($skeletonColumns, $i+1)} { @extend %small-portrait-columns; }
      }
    }

    
  }

  //###### Clearing ########
  &:after {
    content: "\0020";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
  }
}
%old-skeleton-clearfix {
  zoom: 1;

  &:before,&:after {
    content: '\0020';
    display: block;
    overflow: hidden;
    visibility: hidden;
    width: 0;
    height: 0;
  }
  &:after {
    clear: both;
  }
}

.clearfix { @extend %old-skeleton-clearfix; }
.container .row {
  @extend %old-skeleton-clearfix;
  margin-bottom: 20px;
}
.clear {
  clear: both;
  display: block;
  overflow: hidden;
  visibility: hidden;
  width: 0;
  height: 0;
}